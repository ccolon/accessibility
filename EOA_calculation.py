# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-08-11 16:48:24
For each commune, identify the villages accessible within 1h from the largest village of the commune
"""
import arcpy

def EOA_calculation():

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("3D")
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageExt")
    arcpy.CheckOutExtension("ImageAnalyst")

    arcpy.ImportToolbox(r"Conversion Tools.tbx")
    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"Default.gdb", workspace=r"Default.gdb"):
        cambodian_commune = "cambodian_commune" # Point, which is the largest village of each commune
        travel_speeds = arcpy.Raster("travel_speeds.tif")
        cambodian_village = "cambodian_village" # Point

        for I_cambodian_commune, Value in (cambodian_commune, [["commune_code", ""]], True):

            # Process: Cost Distance (Cost Distance) (sa)
            cd_ck = "cost_dist"
            Cost_Distance = cd_ck
            Output_backlink_raster = ""
            with arcpy.EnvManager(scratchWorkspace=r"Default.gdb", workspace=r"Default.gdb"):
                cd_ck = arcpy.sa.CostDistance(in_source_data=I_cambodian_commune, in_cost_raster=travel_speeds, maximum_distance=3.2, out_backlink_raster=Output_backlink_raster, source_cost_multiplier="", source_start_cost="", source_resistance_rate="", source_capacity="", source_direction="")
                cd_ck.save(Cost_Distance)


            # Process: Zonal Statistics as Table (Zonal Statistics as Table) (sa)
            ZonalSt_shp = "ZonalSt_shp"
            with arcpy.EnvManager(scratchWorkspace=r"Default.gdb", workspace=r"Default.gdb"):
                arcpy.sa.ZonalStatisticsAsTable(in_zone_data=cambodian_village, zone_field="village_co", in_value_raster=cd_ck, out_table=ZonalSt_shp, ignore_nodata="DATA", statistics_type="MINIMUM", process_as_multidimensional="CURRENT_SLICE", percentile_values=90, percentile_interpolation_type="AUTO_DETECT")
                .save(Zonal_Statistics_as_Table)


            # Process: Table To Excel (Table To Excel) (conversion)
            _Value_xlsx = fr"{Value}.xlsx"
            with arcpy.EnvManager(scratchWorkspace=r"Default.gdb", workspace=r"Default.gdb"):
                arcpy.conversion.TableToExcel(Input_Table=ZonalSt_shp, Output_Excel_File=_Value_xlsx, Use_field_alias_as_column_header="NAME", Use_domain_and_subtype_description="CODE")

if __name__ == '__main__':
    EOA_calculation()
